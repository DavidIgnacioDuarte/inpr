program {
    
    return(cuenta_ConSaldoActualizadoA_(Cuenta( numeroDeCuenta <- 1234,
                                                tipoDeCuenta <- CuentaCorriente,
                                                nombreDeCliente <- "Felipe",
                                                tipoDeMoneda <- Dólares,
                                                saldo <- 100000 ),
                                        300000) )
    
}

type Cuenta is record {
    /*
      PROPÓSITO: Modelar una cuenta bancaria.
      INV REP: *El "saldo" se representa como centavos del "tipoDeMoneda".
    */
     field numeroDeCuenta //Un número.
     field tipoDeCuenta //Un valor de tipo "TipoDeCuenta".
     field nombreDeCliente //Un string.
     field tipoDeMoneda //Un valor de tipo "Moneda".
     field saldo //Un número.
}

type TipoDeCuenta is variant {
    /* 
      PROPÓSITO: modelar los diferentes tipos de cuenta que ofrece el banco.
    */
     case CuentaCorriente {}
     case CajaDeAhorro {}
     case CuentaSueldo {}
}

type Moneda is variant {
    /* PROPÓSITO: modelar los diferentes tipos de moneda con los que trabaja el banco.
    */
     case Pesos {}
     case Dólares {}
     case Euros {}
     case Reales {}
}

function cuenta_ConSaldoActualizadoA_(cuenta, nuevoSaldo) {
    /*
      PROPÓSITO: Describe a la dada "cuenta" con el saldo actualizado por el dado "nuevoSaldo".
      PRECONDICIONES: El valor de "nuevoSaldo" debe ser >= 0
      PARÁMETROS: cuenta= Valor de tipo "Cuenta".
                  nuevoSaldo= Valor de tipo "Saldo".
    */
        return( Cuenta(cuenta | saldo <- nuevoSaldo) )
}

















